import { Component, OnInit } from '@angular/core';
import { Subject, takeUntil } from 'rxjs';
import { FibonacciService } from '../services/fibonacci.service';
import { MatTableDataSource } from '@angular/material/table';
import { FibonacciRequestInfo } from '../shared/autogenerated/api.generated.clients';
import * as moment from 'moment';

@Component({
  selector: 'app-fibonacci-info-display',
  templateUrl: './fibonacci-info-display.component.html',
  styleUrls: ['./fibonacci-info-display.component.scss']
})
export class FibonacciInfoDisplayComponent implements OnInit {
  private unsubscriber$: Subject<void> = new Subject<void>();

  public dataSource: MatTableDataSource<FibonacciRequestInfo> = new MatTableDataSource<FibonacciRequestInfo>();
  public requestInfoList: FibonacciRequestInfo[] = [];
  public displayedColumns: string[] = ['requestedNumber', 'resultNumber', 'requestDate'];

  constructor(
    private _fibonacciService: FibonacciService
  ) { }

  ngOnInit(): void {
    this.initSubscriptions();
  }

  private initSubscriptions(){
    this._fibonacciService.refreshTable$
    .pipe(takeUntil(this.unsubscriber$))
    .subscribe(() => {
      this.loadInfo();
    })
  }

  private loadInfo(){
    this._fibonacciService.getAllInfo().pipe(takeUntil(this.unsubscriber$)).subscribe({
      next: (response) => {
        this.requestInfoList = response;
        console.log("LoadInfo response", response);
        this.dataSource = new MatTableDataSource(this.requestInfoList);
      },
      error: (err) => {

      }
    });
  }

  getFormattedDate(inputDate){
    if(!inputDate){
      return "";
    }
    return moment(inputDate).format('LLL')
  }

  ngOnDestroy(){
    this.unsubscriber$.next();
    this.unsubscriber$.complete();
  }
}
